name: Build Binaries

on:
  workflow_dispatch:
  push:
    paths:
      - "Docker_files/Dockerfile.binaries"
  schedule:
    - cron: "0 20 5 * *"

jobs:
  Binaries:
    if: ${{ ! contains(toJSON(github.event.commits.*.message), '[ci skip]') }}
    runs-on: ubuntu-20.04
    env:
      DOCKER_BUILDKIT: 1
      DOCKER_CLI_EXPERIMENTAL: enabled

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create VARS
        env:
          _repo: ${{github.repository}}
          _ref: ${{github.ref}}
          _sha: ${{github.sha}}
        id: vars
        run: |
          echo "::set-output name=branch::$(echo ${_ref} | cut -d/ -f3,4 | sed 's!/!-!' | tr '[:upper:]' '[:lower:]')"
          echo "::set-output name=username::$(echo ${_repo} | cut -d/ -f1 | tr '[:upper:]' '[:lower:]')"
          echo "::set-output name=repo::$(echo ${_repo} | tr '[:upper:]' '[:lower:]')"
          echo "::set-output name=sha::${_sha:0:8}"

      - name: Docker Experimental
        run: |
          echo $'{\n    "experimental": true\n}' | sudo tee /etc/docker/daemon.json
          sudo service docker restart

      - name: Build the Docker image
        working-directory: ./Docker_files
        env:
          REPO: ${{ steps.vars.outputs.repo }}
          BRANCH: ${{ steps.vars.outputs.branch }}
        run: |
          make IMAGE=${{ steps.vars.outputs.repo }} binaries
          docker tag ${{ steps.vars.outputs.repo }}:binaries ${{ steps.vars.outputs.repo }}:binaries-$(date --utc +%Y-%m-%d_%H)

      - name: Login to registry
        env:
          DOCKER_USERNAME: ${{ steps.vars.outputs.username }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
        run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

      - name: Pushes the Docker image
        env:
          REPO: ${{ steps.vars.outputs.repo }}
        run: docker push $REPO
